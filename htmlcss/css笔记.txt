=============      07-29       ==================
/** inline-block   ******/
	1.使块元素在一行显示
	2.使内联支持宽高
	3.换行被解析了，二个元素之间有空格
	4.不设置宽高的时候宽度由内容撑开
	5.在IE6,7下不支持块标签
	     div ,span {height:100px;width:100px;background:red;display:inline-block;}

 浮动：
	 1.使块元素在一行显示
	 2.使内联支持宽高
	 3.不设置宽高的时候宽度由内容撑开
	 4.在IE6,7下支持块标签
	 5.脱离文档流，浮起来了，不占位置

 清浮动：
	 1. 给父级加浮动
	 2. 给父级加display：inline-block
	 3.在浮动元素下加一个空div：<div class="clear"></div>
	 4.在浮动元素下加<br clear="all"/>
	 5.利用伪类:after例如给父元素设置个clear类.                                                     clear:after{content:"";display:block;clear:both;},   记住只有块元素才有clear属性
	 6.给浮动元素的父级加{zoom:1;}是放大的意思，在IE下兼容，其他不兼容，接着父级加伪类:after    {如上的第5点}
	    (--------》最值得提倡)

	 7.在ie6，7下浮动元素的父级有宽度就不用清除浮动。还有个haslayout知识点：根据元素内容的大    小或者父级的大小来重新计算元素的宽高。
	 8.给浮动元素父级加overflow:hidden;也行，一定要配合zoom:1;
     9.可以给父级一个定位元素：position:absolute或position:fixed;


	 /**** IE6下的双边距BUG  *****************/
	   1.在ie6下。块元素有浮动和横向的margin，横向的margin值会被放大成两倍。
	        解决方法：display：inline；
	   2。在ie6,7下元素浮动并在同一行的元素都要加浮动


/****  定位元素  ************/
	z-index：number；定位层级  ---》 定位元素默认后者层级高于前者。

绝对定位：position：absolute；
a.使元素完全脱离文档流；
b.使内嵌支持宽高；
c.块属性标签内容撑开宽度；
d.如果有定位父级相对于定位父级发生偏移，没有定位父级相对于整个文档发生偏移。而不是body，
  html。
e.相对定位一般都是配合绝对定位元素使用。

固定定位：position：fixed；
   与绝对定位的特性基本一致，差别是始终相对整个文档进行定位；
   行定位：问题：ie6不支持固定定位；


============ 7-30 ==================================
/********* 元素的宽度由内容撑开   ***********/
  display:inline (不支持高度)
  display:inline-block (ie6不兼容)
  float
  position:absolute (父级都需要加定位，麻烦)
  position:fixed (兼容性不是很好)


 =========== 8-1 兼容性问题  ==========
 1.ie6下最小高度问题：当元素的高度小于19px时，会被当做19px处理：解决方法是：加上overflow：hidden

 2.dotted问题(ie6下不兼容)
    点线会变成虚线，解决方法是border-width变成2px，只有不是1px就行了。或切背景解决。

  3.ie6下双边距BUG
    在ie6，块级元素有浮动和横向的margin值，横向的margin值会被放大成二倍。
    解决方法：display：inline；

  /****** css hack *********/
 1. \9 表示ie10之前的ie浏览器：--》background：blue\9;
 2.  属性之前如果*或+号可以被ie7之前的ie浏览器解析:+background:yellow;
 3._ ie6包括ie6之前的ie浏览器

 4.样式优先级，提升样式优先级
    默认<类型<class<id<style(行间)<important
    !important提升样式优先级权重
